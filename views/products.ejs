<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Invoicing | <%- title %></title>

    <!-- Custom fonts for this template -->
    <link href="assets/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Custom styles for this template -->
    <link href="assets/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="assets/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

    <style>
        body {
            font-size: 0.85rem !important;
        }

        table {
            font-size: 0.8rem !important;
        }

        table tr th,
        table tr td {
            padding: 0.3rem !important;
            vertical-align: middle !important;
        }

        table tr td:last-child,
        table tr td:nth-last-child(2) {
            text-align: center !important;
        }

        table tr td:last-child {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
        }
    </style>
</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">
        <%- include('partials/sidebar') %>

            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">

                <!-- Main Content -->
                <div id="content">

                    <%- include('partials/topbar') %>

                        <!-- Begin Page Content -->
                        <div class="container-fluid">

                            <!-- Page Heading -->
                            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                                <h5 class="mb-0 text-gray-800">Produtos</h5>
                                <button class="btn btn-primary btn-sm" id="btn-create-product" type="button"
                                    data-toggle="modal" data-target="#productModal">
                                    <i class="fas fa-plus fa-sm text-white-50"></i> Adicionar Produto
                                </button>

                            </div>

                            <!-- DataTales Example -->
                            <div class="card shadow mb-4">
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                            <thead>
                                                <tr class="bg-secondary text-white">
                                                    <th>Nome do Produto</th>
                                                    <th class="text-center">Preço Unitário</th>
                                                    <th class="text-center">Acções</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                            </tbody>
                                            <tfoot>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!-- /.container-fluid -->

                </div>
                <!-- End of Main Content -->

                <%- include('partials/copyright') %>

            </div>
            <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Confirmation Modal-->
    <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title" id="exampleModalLabel"><strong><i class="fa-solid fa-pen-to-square"></i>
                            Adicionar Produto</strong></h6>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <form id="add-product-form">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="product-name">Nome do Produto</label>
                            <input type="text" class="form-control form-control-sm" id="add-product-name" name="product-name"
                                placeholder="Nome do Produto" required>
                        </div>
                        <div class="form-group">
                            <label for="product-price">Preço Unitário</label>
                            <input type="number" class="form-control form-control-sm" id="add-product-price" name="product-price"
                                placeholder="Preço Unitário" required>
                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button class="btn btn-secondary btn-sm" type="button" data-dismiss="modal">Fechar</button>
                    <button id="btn-add-product" class="btn btn-primary btn-sm">Adicionar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="updateProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title" id="exampleModalLabel"><strong><i class="fa-solid fa-pen-to-square"></i>
                            Actualizar Produto</strong></h6>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <form id="update-product-form">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="product-name">Nome do Produto</label>
                            <input type="text" class="form-control form-control-sm" id="update-product-name" name="product-name"
                                placeholder="Nome do Produto" required>
                        </div>
                        <div class="form-group">
                            <label for="product-price">Preço Unitário</label>
                            <input type="text" class="form-control form-control-sm" id="update-product-price" name="product-price"
                                placeholder="Preço Unitário" required>
                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button class="btn btn-secondary btn-sm" type="button" data-dismiss="modal">Cancelar</button>
                    <button id="btn-update-product" class="btn btn-primary btn-sm">Actualizar</button>
                </div>
            </div>
        </div>
    </div>

    <%- include('partials/footer') %>

        <!-- Page level plugins -->
        <script src="assets/vendor/datatables/jquery.dataTables.min.js"></script>
        <script src="assets/vendor/datatables/dataTables.bootstrap4.min.js"></script>

        <!-- Page level custom scripts -->
        <script src="assets/js/demo/datatables-demo.js"></script>
        <script src="assets/js/products.js"></script>
        <script>
            let selectedRow;
            function showProducts() {
                fetch('/api/products')
                    .then(response => response.json())
                    .then(data => {
                        data.products.forEach(product => {
                            const actualArray = [
                                product.description,
                                product.unitPrice.toFixed(2),
                                `<button class="btn btn-primary btn-sm btn-edit-product" id="${product._id}" data-toggle="modal" data-target="#updateProductModal"><i class="fa-solid fa-pen-to-square"></i></button>
                             <button class="btn btn-danger btn-sm btn-delete-product" id="${product._id}"><i class="fa-solid fa-trash"></i></button>`]

                            $('#dataTable').DataTable().row.add(actualArray).draw(false);
                        });
                    })
                    .catch(error => console.error('Error fetching products:', error));
            }


            //Listener for the "Add Product" button
            document.addEventListener('DOMContentLoaded', function () {
                showProducts();

                document.getElementById('btn-add-product').addEventListener('click', function () {
                    const productName = document.getElementById('add-product-name').value;
                    const productPrice = document.getElementById('add-product-price').value;

                    if (productName.trim() !== '' && productPrice.trim() !== '') {
                        const data = {
                            description: productName,
                            unitPrice: parseFloat(productPrice)
                        };
                        fetch('/api/products', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log(data.product);
                                if (data.success) {
                                    addProductRow(data.product);
                                    Swal.fire({
                                        icon: 'success',
                                        text: 'Produto Adicionado com Sucesso',
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        text: 'Erro ao Adicionar Produto',
                                        text: data.message
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    text: 'Erro ao Adicionar Produto',
                                    text: error.message
                                });
                            });
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            text: 'Campos Obrigatórios',
                            text: 'Por favor, preencha todos os campos.'
                        });
                    }
                });

                // Event listener for the "Update Product" button
                document.getElementById('btn-update-product').addEventListener('click', function () {
                    const productName = document.getElementById('update-product-name').value;
                    const productPrice = document.getElementById('update-product-price').value;

                    if (productName.trim() !== '' && productPrice.trim() !== '') {
                        const data = {
                            description: productName,
                            unitPrice: parseFloat(productPrice)
                        };
                        fetch(`/api/products/${productId}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        text: 'Produto Actualizado com Sucesso',
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                    showProducts();
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        text: 'Erro ao Actualizar Produto',
                                        text: data.message
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    text: 'Erro ao Actualizar Produto',
                                    text: error.message
                                });
                            });
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            text: 'Campos Obrigatórios',
                            text: 'Por favor, preencha todos os campos.'
                        });
                    }
                });
            });

            function addProductRow(product) {
                const actualArray = [
                    product.description,
                    product.unitPrice.toFixed(2),
                    `<button class="btn btn-primary btn-sm btn-edit-product" id="${product._id}" data-toggle="modal" data-target="#updateProductModal"><i class="fa-solid fa-pen-to-square"></i></button>
                    <button type="button" class="btn btn-danger btn-sm btn-delete-product" id="${product._id}"><i class="fa-solid fa-trash"></i></button>`]

                $('#dataTable').DataTable().row.add(actualArray).draw(false);
            }

            function updateProductRow(product) {
                const row = $('#dataTable').DataTable().row(selectedRow);
                const actualArray = [
                    product.description,
                    product.unitPrice.toFixed(2),
                    `<button class="btn btn-primary btn-sm btn-edit-product" id="${product._id}" data-toggle="modal" data-target="#updateProductModal"><i class="fa-solid fa-pen-to-square"></i></button>
                    <button type="button" class="btn btn-danger btn-sm btn-delete-product" id="${product._id}"><i class="fa-solid fa-trash"></i></button>`]

                row.data(actualArray).draw(false);
            }

            // Event listener for the "Delete Product" button
                $('#dataTable tbody').on('click', '.btn-delete-product', function (event) {
                    const productId = $(this).attr('id');
                    const row = $(this).closest('tr');
                    Swal.fire({
                        title: 'Tem a certeza?',
                        text: "Você não poderá reverter isso!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sim, excluir!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/api/products/${productId}`, {
                                method: 'DELETE'
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.status === "success") {
                                        Swal.fire(
                                            'Excluído!',
                                            'Produto excluído com sucesso.',
                                            'success'
                                        );
                                        $('#dataTable').DataTable().row(row).remove().draw(false);
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            text: 'Erro ao Excluir Produto',
                                            text: data.message
                                        });
                                    }
                                })
                                .catch(error => {
                                    Swal.fire({
                                        icon: 'error',
                                        text: 'Erro ao Excluir Produto',
                                        text: error.message
                                    });
                                });
                        }
                    });
                });

            // Event listener for the "Edit Product" button
            $('#dataTable tbody').on('click', '.btn-edit-product', function (event) {
                const productId = $(this).attr('id');
                selectedRow = $(this).closest('tr');
                fetch(`/api/products/${productId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === "success") {
                            const product = data.product;
                            document.getElementById('update-product-name').value = product.description;
                            document.getElementById('update-product-price').value = product.unitPrice;
                            document.getElementById('btn-update-product').setAttribute('data-id', product._id);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                text: 'Erro ao Carregar Produto',
                                text: data.message
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            text: 'Erro ao Carregar Produto',
                            text: error.message
                        });
                    });
            });

            document.getElementById('btn-update-product').addEventListener('click', function () {
                const productId = this.getAttribute('data-id');
                const productName = document.getElementById('update-product-name').value;
                const productPrice = document.getElementById('update-product-price').value;

                if (productName.trim() !== '' && productPrice.trim() !== '') {
                    const data = {
                        description: productName,
                        unitPrice: parseFloat(productPrice)
                    };
                    fetch(`/api/products/${productId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === "success") {
                                const updatedProduct = data.product;
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Sucesso',
                                    text: 'Produto Actualizado com Sucesso',
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                               updateProductRow(updatedProduct);
                                $('#updateProductModal').modal('hide');
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Erro',
                                    text: 'Erro ao Actualizar Produto',
                                    text: data.message
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                icon: 'error',
                                text: 'Erro ao Actualizar Produto',
                                text: error.message
                            });
                        });
                } else {
                    Swal.fire({
                        icon: 'warning',
                        text: 'Campos Obrigatórios',
                        text: 'Por favor, preencha todos os campos.'
                    });
                }
            });
        </script>
</body>

</html>